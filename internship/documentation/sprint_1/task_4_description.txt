Почему команда Gradle build работает "из коробки" (по дефолту)?

Откуда он знает где в проекте лежит продакшн код, а где лежат тесты?

Наш проект использует так называемую Maven структуру проекта.
Эта структура называется так, потому что она впервые появилась
и использовалась в проектах под управлением Build Tool Maven.

Maven структура проекта состоит из:
- src - директория с кодом
- src/main - в директории лежит продакшн код
- src/main/java - Java продакшн код (классы)
- src/main/resources - продакшн файлы ресурсов
- src/test - в директории лежит тестовый код
- src/test/java - тесты написанные на Java
- src/test/resources - тестовые файлы ресурсов

Попробуйте узнать больше о том зачем была создана
и применяется такая структура проекта в современной разработке.

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Task_x_description.txt. Формат заполнения этого
файла описан в task_1 в файле Learning_reflection.txt.

Наличие общей структуры каталогов позволяет пользователям, знакомым с одним проектом
Maven, сразу же чувствовать себя как дома в другом проекте Maven.
Преимущества аналогичны принятию общего для всего сайта вида и поведения.


**Контекст задачи (краткое описание) **
TODO: опишите контекст и задачу своими словами в свободной форме.

**Что было сделано и как? (краткое описание)**
TODO: опишите что и как делали для того, чтобы выполнить задачу.

**Зачем это было сделано? Чему научился в процессе выполнения задания?**
TODO: опиши своими словами зачем было необходимо выполнить это задание,
опиши какие техники, технологии, инструменты, использовал для выполнения задания,
чему научился выполняя это задание?


**Сколько потратил времени на выполнение задачи?**
TODO: зафиксируй для себя сколько времени потратил на выполнение этого задания. Можно ли было его сделать быстрее?


**Заметки, идеи, предложения в свободной форме**
TODO: зафиксируй любые свои мысли, эмоции, идеи, размышления связанные с этим заданием.