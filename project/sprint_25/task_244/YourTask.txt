Создайте реальную реализацию интерфейса ProposalGeneratorQueueSender
для отсылки сообщений в RabbitMQ.

Добавьте в приложение зависимости для подключения к брокеру
сообщений RabbitMQ. Для этого в экосистеме Spring Boot
добавьте зависимость от spring-boot-starter-amqp.

Добавьте конфигурацию подключения к брокеру сообщений в
профайл для mysql-container предназначенный для поднятия
приложения в контейнере с подключением к MySQL серверу в
другом контейнере.

Создайте вторую реализацию интерфейса ProposalGeneratorQueueSender
в которой полученный объект AgreementDTO превратите в Json,
положите Json в тело сообщения и отправьте его в очередь RabbitMQ
под названием "q.proposal-generation".

Реальная реализация ProposalGeneratorQueueSender должна использоваться
при Spring Profile "mysql-container", заглушка созданная ранее
для всех остальных профайлов.

Попробуйте запустить приложения в контейнерах и проверить
отсылаются ли сообщения в очередь. Если нет, то переходите
к следующему шагу, в нем будет пояснение проблемы и ее решение.

PS: быстро найти все изменения сделанные в текущем задании
можно в IDEA (закладка слева) выбрав папку текущего задания (например task_10)
и папку предыдущего задания (например task_9) и в сплывающем меню выбрав пункт
Compare Directories (Ctrl + D).

PS: не забудьте по окончанию выполнения шага создать и заполнить
файл /documentation/Task_x_description.txt. Формат заполнения этого
файла описан в task_1 в файле Learning_reflection.txt.